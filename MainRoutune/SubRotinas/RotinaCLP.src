DEF RotinaCLP ( )
   ;{EsteiraAtiva} numero da esteira que está com a caixa
   ;{CLPNumCaixas} numero de caixas para o pick
   ;{CLPIndexacaoVH} TRUE-> Vertical / FALSE -> Horizontal
   ;INT EsteiraAtiva=1
   ;INT  CLPNumCaixas    
   ;BOOL CLPIndexacaoVH  
   SkipPTP = FALSE

   REPEAT
      ;precisa saber qual o pallet ativo
      ;atravez do pallet ativo o programa sabe qual mozaico está selecionado
      ;FOLD VERIFICA CAIXA E CAMADA
         ;->apos colocar a caixa deve acrescentar + 1 em
         ProximoPlace=StrPallet[PalletAtivo].PlaceAtivo + 1
         ProximaCamada=StrPallet[PalletAtivo].CamadaAtiva

         ;->se a qtd de caixas da camada for acima da qtd do mozaico deve-se subir a camada
         IF ProximoPlace > StrReceita[ReceitaAtivo].PlacesCamada THEN
         ProximoPlace=0 ;verificar aqui se deve comecar com 1 ou 0
         ProximaCamada=StrPallet[PalletAtivo].CamadaAtiva + 1
         ENDIF
         ;->se a qtd de camadas do pallet for acima da qtd do mozaico
         IF ProximaCamada > StrReceita[ReceitaAtivo].Camadas THEN
               ;Envia alerta de Pallet concluido
               IndexacaoVH = FALSE
               NumCaixas = 0
               EXIT
         ENDIF
      ;ENDFOLD

      IF (MatrizPontos[MosaicoAtivo,ProximoPlace+1].SkipGoHome == TRUE) THEN
         SkipPTP = TRUE
      IF (MatrizPontos[MosaicoAtivo,ProximoPlace+1].SkipGoHome == FALSE) AND (SkipPTP = TRUE)  THEN
         SkipPTP = FALSE
      ENDIF

   UNTIL (SkipPTP == FALSE)

   ;SAIDA
   IndexacaoVH = MatrizPontos[MosaicoAtivo,ProximoPlace+1].IndexacaoVH
   NumCaixas = MatrizPontos[MosaicoAtivo,ProximoPlace+1].NumCaixas  

END