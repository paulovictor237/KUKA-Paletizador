DEF UpdateIndexCaixas ( )
   ;o ponto atual sempre eh de pick
   ProximoPlace  = StrCLP[PalletAtivo].ProximoPlace
   ProximaCamada = StrCLP[PalletAtivo].ProximaCamada
   
   ;passo para descobrir o endereco do ponto na matriz
   ProxPlacesCamada = StrReceita[ReceitaAtivo].PlacesCamada
   ProxLayer        = StrReceitaLayer[ReceitaAtivo,ProximaCamada]
   ProxPlaceLayer   = ProximoPlace + ProxPlacesCamada*(ProxLayer-1)
   
   ;captura o valor da matriz
   IndexacaoVH = MatrizPontos[PalletAtivo,ReceitaAtivo,ProxPlaceLayer].IndexacaoVH
   NumCaixas = MatrizPontos[PalletAtivo,ReceitaAtivo,ProxPlaceLayer].NumCaixas 
   
   ;consome só os places que não ocorre pick
   REPEAT
      StrCLP[PalletAtivo].ProximoPlace = StrCLP[PalletAtivo].ProximoPlace + 1
      ;->se a qtd de caixas da camada for acima da qtd do mozaico deve-se subir a camada
      IF StrCLP[PalletAtivo].ProximoPlace > StrReceita[ReceitaAtivo].PlacesCamada THEN
         StrCLP[PalletAtivo].ProximoPlace=1 ;verificar aqui se deve comecar com 1 ou 0
         StrCLP[PalletAtivo].ProximaCamada=StrCLP[PalletAtivo].ProximaCamada + 1
      ENDIF
      ;->se a qtd de camadas do pallet for acima da qtd do mozaico
      IF StrCLP[PalletAtivo].ProximaCamada > StrReceita[ReceitaAtivo].Camadas THEN
         ;Pallet Completo
         StrCLP[PalletAtivo].ProximoPlace = 1
         StrCLP[PalletAtivo].ProximaCamada = 1
         EXIT
      ENDIF
      
      ;PUXA TUDO PARA AS VARIAVEIS
      ;passo para descobrir o endereco do ponto na matriz
      ProxPlacesCamada = StrReceita[ReceitaAtivo].PlacesCamada
      ProxLayer        = StrReceitaLayer[ReceitaAtivo,ProximaCamada]
      ProxPlaceLayer   = ProximoPlace + ProxPlacesCamada*(ProxLayer-1)
      SkipGoHome = MatrizPontos[PalletAtivo,ReceitaAtivo,ProxPlaceLayer].SkipGoHome
   UNTIL (SkipGoHome == FALSE) 
END