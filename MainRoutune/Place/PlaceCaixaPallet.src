&ACCESS RV1
&REL 28
&PARAM DISKPATH = KRC:\R1\Program\MainRoutune\Place
DEF PlaceCaixaPallet()
   
   ;FOLD ROTINAS DE INICIALIZACAO
      SkipPTP = FALSE
      PrimeiroPonto = TRUE
   ;ENDFOLD

   ;FOLD SET BaseRelativa
      $TOOL = TOOL_DATA[1]
      $BASE = BaseRelativa
   ;ENDFOLD
   
   XSobeRelativoZ =  XApp1Place.Z
   
   REPEAT
      
      ;FOLD PUXA TUDO PARA AS VARIAVEIS
         PuxaReceita()
      ;ENDFOLD 

      ;FOLD ATUALIZA OS PONTOS DE PLACE
         SetPlacePos()
      ;ENDFOLD 

      ;FOLD ATUALIZA OFFSET PALLET+PRODUTO
         BaseRelativa.X = BasePoint.X + OffSetPallet.X + OffsetProduto.X
         BaseRelativa.Y = BasePoint.Y + OffSetPallet.Y + OffsetProduto.Y
         BaseRelativa.Z = BasePoint.Z + OffSetPallet.Z + OffsetProduto.Z
         BaseRelativa.A = BasePoint.A + OffSetPallet.A + OffsetProduto.A
         BaseRelativa.B = BasePoint.B + OffSetPallet.B + OffsetProduto.B
         BaseRelativa.C = BasePoint.C + OffSetPallet.C + OffsetProduto.C
      ;ENDFOLD
      
      ;FOLD ATUALIZA VARIAVEIS DE SKIP
         SkipGoHome = MatrizPontos[PalletAtivo,ReceitaAtivo,PlaceLayerAtivo].SkipGoHome
         SkipSobeRelativo = MatrizPontos[PalletAtivo,ReceitaAtivo,PlaceLayerAtivo].SkipSobeRelativo
      ;ENDFOLD
      
      ;FOLD ATUALIZA TOPO DINAMICO - DESATIVADO
         ;->marca o mespo ponto de deposito so que deslocado em Z
         ;AQUI POSSO MARCAR UMA ALTURA PADRAO DEPOIS
         ;XTopoPallet = XApp1Place
         ;XTopoPallet.Z = ALTURATOPO
      ;ENDFOLD
      
      ;FOLD MOVE XTopoPallet - DESATIVADO
         ;$BWDSTART = FALSE
         ;PDAT_ACT = PPDAT1
         ;FDAT_ACT = FP1
         ;BAS(#PTP_PARAMS, 100.0)
         ;SET_CD_PARAMS (0)
         ;PTP XTopoPallet C_Dis
      ;ENDFOLD

      ;Configura a altura de saida do Place
      XSobeRelativo = XPlace
      XSobeRelativo.Z = XSobeRelativoZ

      ;FOLD raciocinio do calculo de igualar bases
         ;    ZPick  _      _ ZPlace
         ;           |      |
         ;           |      |
         ;           |      |
         ;           |      - BPlace
         ;           |      |
         ;    BPick  -      |
         ;           |      |
         ;           |      |
         ;             ZERO

         ;ZPick  + BPick  = ZPlace + BPlace 

         ;ZPick  = ZPlace + BPlace - BPick
         ;ZPlace = ZPick  + BPick  - BPlace

         ;ALTURATOPO=1800
         ;ZPick  = ALTURATOPO - BPick
         ;ZPlace = ALTURATOPO - BPlace
      ;ENDFOLD

      ;TOPO DINAMICO IGUALANDO A BASE PLACE COM A DO PICK
      ;como o ponto de pick ja eh igual ao do place
      ;aqui so verifica se esse ponto possui a altura minima
      ; ZPlace2 = ALTURATOPO - BPlace
      ; IF (ZPlace1 < ZPlace2)
      IF (PrimeiroPonto == TRUE) AND (XApp1Place.Z<(ALTURATOPO - BaseRelativa.Z)) THEN
         XApp1Place.Z = ALTURATOPO - BaseRelativa.Z
      ENDIF
      PrimeiroPonto = FALSE

      ;TRES PONTOS DE DEPOSITO
      ;XApp1Place DIRETO com movimento PTP         
      IF (SkipPTP == FALSE) THEN
         PTP  XApp1Place C_DIS
      ELSE
         ;se for fazer um outro place o 
         ;primeiro movimento deve ser linear
         LIN  XApp1Place C_DIS C_DIS
      ENDIF
      
      IF (SkipSobeRelativo == TRUE) THEN
         SkipPTP = TRUE
      ENDIF
      
      ;SET_CD_PARAMS (0)
      ;XApp2Place DIRETO com movimento LIN
      LIN  XApp2Place C_DIS C_DIS
      ;XPlace DIRETO com movimento LIN
      LIN  XPlace 
      
      ;FOLD Verifica Caixas
         VerificaCaixas()
      ;ENDFOLD

      ;FOLD ABRE GARRA  
         AbreGarra()
      ;ENDFOLD     
      
      ;FOLD TROCA A CAMADA DO PALLET
         SetCamada()
      ;ENDFOLD
      
      IF (SkipSobeRelativo == FALSE) THEN
         ;Se for realizar um sobe relativo para ir para pick de novo
         ;esse ponto tem que casar com o ponto de pick
         ;para isso se verifica se ao menos a altura é a mínima 
         ;IF (SkipGoHome == FALSE) THEN
         ;   SetPlacePos()
         ;   XSobeRelativo.Z = XApp1Place.Z
         ;   IF ( XSobeRelativo.Z<(ALTURATOPO - BaseRelativa.Z) ) THEN
         ;      XSobeRelativo.Z = ALTURATOPO - BaseRelativa.Z
         ;   ENDIF
         ;ENDIF
         IF (SkipGoHome == FALSE) AND (XSobeRelativo.Z<(ALTURATOPO - BaseRelativa.Z)) THEN
            XSobeRelativo.Z = ALTURATOPO - BaseRelativa.Z
         ENDIF
         LIN  XSobeRelativo 
         ;RelFrame = {X 0,Y 0,Z 0,A 0,B 0,C 0}
         ;RelFrame.Z=AlturaCaixa + 100
         ;LIN_REL RelFrame   
      ENDIF
      
      ;FOLD MOVE XTopoPallet  - DESATIVADO
         ;Seta valores de de2osito na saida do deposito
         ;XTopoPallet.X = XPlace.X
         ;XTopoPallet.Y = XPlace.Y 
         ;$BWDSTART = FALSE
         ;PDAT_ACT = PPDAT1
         ;FDAT_ACT = FP1
         ;BAS(#PTP_PARAMS, 100.0)
         ;SET_CD_PARAMS (0)
         ;PTP XTopoPallet C_Dis
      ;ENDFOLD
      
   UNTIL (SkipGoHome == FALSE)
   
   ;AbreGarraCompleto_noWait()
   PuxaReceita()
   ConfGarra_NoWait()

   ;AlturaUltimoDeposito = XPlace.Z
   $BASE = $NULLFRAME
   AlturaUltimoDeposito = $POS_ACT.Z
END
