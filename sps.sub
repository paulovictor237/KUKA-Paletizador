&ACCESS  RVO
&COMMENT PLC on control
DEF  SPS ( )
  ;FOLD DECLARATIONS
  ;FOLD BASISTECH DECL
  ;Automatik extern
  DECL STATE_T STAT
  DECL MODUS_T MODE
  ;ENDFOLD (BASISTECH DECL)
  ;FOLD USER DECL
  ; Please insert user defined declarations

  ;ENDFOLD (USER DECL)
  ;ENDFOLD (DECLARATIONS)
  ;FOLD INI
  ;FOLD AUTOEXT INIT
  INTERRUPT DECL 91 WHEN $PRO_STATE1==#P_FREE DO RESET_OUT ()
  INTERRUPT ON 91
  INTERRUPT DECL 92 WHEN $PRO_MOVE==TRUE DO RESET_LINESEL()
  INTERRUPT ON 92
  $LOOP_MSG[]="                                                            "
  MODE=#SYNC
  $H_POS=$H_POS
  ;Automatik extern
  IF $MODE_OP==#EX THEN
    ;CWRITE($CMD,STAT,MODE,"RUN /R1/CELL()")
  ENDIF
  ;ENDFOLD (AUTOEXT INIT)
  ;FOLD BACKUPMANAGER PLC INIT
  BM_ENABLED = FALSE
  BM_OUTPUTVALUE = 0
  ;ENDFOLD (BACKUPMANAGER PLC INIT)
  ;FOLD USER INIT
  ; Please insert user defined initialization commands
     BitsEstaticosPressao()
     ;PressaoMaxLadoA()
     ;PressaoMaxLadoB()
     ;ReduzPressaoLadoA()
     ;ReduzPressaoLadoB()
     ControleCabecaRede()
     TDefault()
  ;ENDFOLD (USER INIT)
  ;ENDFOLD (INI)

  LOOP
    WAIT FOR NOT($POWER_FAIL)
    
    ;FOLD BACKUPMANAGER PLC
    IF BM_ENABLED THEN
      BM_OUTPUTSIGNAL = BM_OUTPUTVALUE
    ENDIF
    ;ENDFOLD (BACKUPMANAGER PLC)
;START AUTOGENERATED -- DO NOT CHANGE -- GripperSpotTech sps SpsSub.add InsertGripperTechGlobals
    ;FOLD GRIPPERTECH LOOP
      GRPg_ChkSetStatePLC()
   ;ENDFOLD (GRIPPERTECH LOOP)
;END AUTOGENERATED -- DO NOT CHANGE -- (GripperSpotTech sps SpsSub.add InsertGripperTechGlobals)
    ;FOLD USER PLC
    ;Make your modifications here

;FOLD Automatico Externo

if (not $EXT) then
   MOVE_ENABLE_OUT = true    
endif

SWITCH EstadoAutExt

   CASE 0 
   
      CONF_MESS_OUT = false   
      EXT_START_OUT = false
      DRIVES_ON_OUT = false   
      MOVE_ENABLE_OUT = true    
   
      if ($EXT and not $USER_SAF OR Start_Robo) then
         EstadoAutExt = 1
      endif
      
   CASE 1 
      
      if $USER_SAF then
         EstadoAutExt = 2
      endif
   
   CASE 2
   
      DRIVES_ON_OUT = true   
      
      if $PERI_RDY then
         DRIVES_ON_OUT = false   
         EstadoAutExt = 3    
      endif   
   
   CASE 3
   
      CONF_MESS_OUT = true 
      
      if not $STOPMESS then
         CONF_MESS_OUT = false
         EstadoAutExt = 4
      endif
   
   CASE 4
   
      EXT_START_OUT = true
      
      if $PRO_ACT then
         EXT_START_OUT = false
         EstadoAutExt = 0
      endif
   
   CASE 5
   
      MOVE_ENABLE_OUT = false  
      
      $TIMER_STOP[1] = true
      $TIMER[1] = 0
      $TIMER_STOP[1] = false 
      
      EstadoAutExt = 6
      
   CASE 6
   
      if ($TIMER[1] > 500) then
         EstadoAutExt = 0
      endif
   
ENDSWITCH

if Stop_Robo then
   EstadoAutExt = 5
endif
    ;
;ENDFOLD           

;FOLD SETAR PRESSAO LADO1 E LADO2
   
   
   
;ENDFOLD 

;FOLD CHAMAR E CANCELAR ROTINA PRINCIPAL
   IF (($EXT_START==TRUE) AND (Start_Robo==TRUE) AND ($FLAG[1]==FALSE)) THEN
      $FLAG[1]=TRUE
   ENDIF
   
   IF (($MODE_OP<>#EX) AND (Start_Robo==FALSE)) THEN
      $FLAG[1]=FALSE
      $FLAG[2]=FALSE
   ENDIF
   
   IF ($MODE_OP==#EX) AND $FLAG[1] AND NOT $FLAG[2] AND NOT Stop_Robo THEN
      CWRITE($CMD,STAT,MODE,"RUN /R1/CELL()")
   ENDIF
   
   ;IF ($MODE_OP==#EX) AND Stop_Robo THEN
      ;CWRITE($CMD,STAT,MODE,"STOP 1")
      ;CWRITE($CMD,STAT,MODE,"CANCEL 1")
   ;ENDIF
;ENDFOLD

;FOLD Controle Pega Esteiras
             
      if Force_PickEsteira1 then
         Esteira=1
      else
      if Force_PickEsteira2 then
         Esteira=2
      else
      if (Esteira==1) and (not (PickReady_Est1 or DryRun_Est1)) and (PickReady_Est2 or DryRun_Est2) or Pallet_STR[Pallet_1].Completo then
         Esteira=2
      else
      if (Esteira==2) and (not (PickReady_Est2 or DryRun_Est2)) and (PickReady_Est1 or DryRun_Est1) or Pallet_STR[Pallet_2].Completo then
         Esteira=1
      endif
      endif
      endif
      endif
   
;ENDFOLD   

;FOLD Controle Palete1 Completo
      
      if Pallet_STR[Pallet_1].Completo or Force_Palete1Completo then
         Palete1_Completo = true
      endif
      
      
      SWITCH Estado_Palete1

         CASE 0 
         
            if Palete1_Completo and not Palete1_OK then           
               Estado_Palete1 = 1
            endif
            
         CASE 1 
            
            if Palete1_OK and Palete1_Posicionado then               
               Palete1_Posicionado_ACK = true
               Estado_Palete1 = 2
            endif
            
         CASE 2
            
            if not Palete1_Posicionado then               
               Palete1_Posicionado_ACK = false                             
               Pallet_STR[Pallet_1].Completo = false
               Palete1_Completo = false
               Estado_Palete1 = 0
            endif
      
      ENDSWITCH
   
;ENDFOLD

;FOLD Controle Palete2 Completo
   
      if Pallet_STR[Pallet_2].Completo or Force_Palete2Completo then
         Palete2_Completo = true
      endif
      
   
      SWITCH Estado_Palete2

         CASE 0 
         
            if Palete1_Completo and not Palete1_OK then           
               Estado_Palete1 = 1
            endif
            
         CASE 1 
            
            if Palete1_OK and Palete1_Posicionado then               
               Palete1_Posicionado_ACK = true
               Estado_Palete1 = 2
            endif
            
         CASE 2
            
            if not Palete1_Posicionado then               
               Palete1_Posicionado_ACK = false                             
               Pallet_STR[Pallet_1].Completo = false
               Palete1_Completo = false
               Estado_Palete1 = 0
            endif
      
      ENDSWITCH
   
   
;ENDFOLD

;FOLD Mirror CLP
   
   Mirror_Mosaico_Est1 = Mosaico_Est1
   Mirror_Mosaico_Est2 = Mosaico_Est2
   
;ENDFOLD 

;ENDFOLD (USER PLC)

  ENDLOOP
  ;FOLD ;%{H}
  ;FOLD
END
  ;ENDFOLD


DEF  RESET_OUT ( )
  INT N
  MsgLoop(" ")
  IF REFLECT_PROG_NR == 1 THEN
    FOR N = 0 TO PGNO_LENGTH - 1
      $OUT[PGNO_FBIT_REFL + N] = FALSE
    ENDFOR
  ENDIF
  IF (PGNO_REQ>0) THEN
    $OUT[PGNO_REQ]=FALSE
  ELSE
    IF (PGNO_REQ<0) THEN
      $OUT[-PGNO_REQ]=TRUE
    ENDIF
  ENDIF
END

DEF RESET_LINESEL()
  $LINE_SEL_OK=FALSE
END
;FOLD USER SUBROUTINE
; Integrate your user defined subroutines

;ENDFOLD (USER SUBROUTINE)
;ENDFOLD

def ATT_VARIABLES_FROM_CLP()

   ;Obtem Informacoes de Receita
   ;Pallet_STR[1].Livre = FALSE
   ;Pallet_STR[1].ReceitaAtual = Mosaico_Est1
   ;Pallet_STR[1].CamadaAtual = Camada_P1 ;TODO: Bloquear quando o programa do robo estiver rodando
   Pallet_STR[1].OffSetPallet.X=OffsetPallete_dx_1
   Pallet_STR[1].OffSetPallet.Y=OffsetPallete_dy_1
   Pallet_STR[1].OffSetPallet.Z=OffsetPallete_dz_1
   Pallet_STR[1].OffSetPallet.A=OffsetPallete_dA_1/1000
   Pallet_STR[1].OffSetPallet.B=0
   Pallet_STR[1].OffSetPallet.C=0

   
   Receita_STR[Pallet_STR[1].ReceitaAtual].OffsetProduto.X = OffsetMosaico_dx_1
   Receita_STR[Pallet_STR[1].ReceitaAtual].OffsetProduto.Y = OffsetMosaico_dy_1
   Receita_STR[Pallet_STR[1].ReceitaAtual].OffsetProduto.Z = OffsetMosaico_dz_1
   Receita_STR[Pallet_STR[1].ReceitaAtual].OffsetProduto.A = OffsetMosaico_dA_1/1000
   ;Receita_STR[Pallet_STR[1].ReceitaAtual].AlturaCaixa =  Altura_Caixa_1
   ;Receita_STR[Pallet_STR[1].ReceitaAtual].Camadas = NumPlacesCamada_1
   ;Receita_STR[Pallet_STR[1].ReceitaAtual].PlacesCamada= NumCamadas_1

   OffsetEsteira1.X=OffsetEsteira_dx_1
   OffsetEsteira1.Y=OffsetEsteira_dy_1
   OffsetEsteira1.Z=OffsetEsteira_dz_1
   OffsetEsteira1.A=OffsetEsteira_dA_1/1000
   OffsetEsteira1.B=0
   OffsetEsteira1.C=0
   
   ;Obtem Informacoes de Receita
   ;Pallet_STR[2].Livre = FALSE
   ;Pallet_STR[2].ReceitaAtual = Mosaico_Est2
   ;Pallet_STR[2].CamadaAtual = Camada_P2 ;TODO: Bloquear quanto o programa do robo estiver rodando
   Pallet_STR[2].OffSetPallet.X=OffsetPallete_dx_2
   Pallet_STR[2].OffSetPallet.Y=OffsetPallete_dy_2
   Pallet_STR[2].OffSetPallet.Z=OffsetPallete_dz_2
   Pallet_STR[2].OffSetPallet.A=OffsetPallete_dA_2/1000
   Pallet_STR[2].OffSetPallet.B=0
   Pallet_STR[2].OffSetPallet.C=0   
  
   Receita_STR[Pallet_STR[2].ReceitaAtual].OffsetProduto.X = OffsetMosaico_dx_2
   Receita_STR[Pallet_STR[2].ReceitaAtual].OffsetProduto.Y = OffsetMosaico_dy_2
   Receita_STR[Pallet_STR[2].ReceitaAtual].OffsetProduto.Z = OffsetMosaico_dz_2
   Receita_STR[Pallet_STR[2].ReceitaAtual].OffsetProduto.A = OffsetMosaico_dA_2/1000
   ;Receita_STR[Pallet_STR[2].ReceitaAtual].AlturaCaixa =  Altura_Caixa_2
   ;Receita_STR[Pallet_STR[2].ReceitaAtual].Camadas = NumPlacesCamada_2
   ;Receita_STR[Pallet_STR[2].ReceitaAtual].PlacesCamada= NumCamadas_2

   OffsetEsteira2.X=OffsetEsteira_dx_2
   OffsetEsteira2.Y=OffsetEsteira_dy_2
   OffsetEsteira2.Z=OffsetEsteira_dz_2
   OffsetEsteira2.A=OffsetEsteira_dA_2/1000
   OffsetEsteira2.B=0
   OffsetEsteira2.C=0
   
END