;FOLD Variaveis PEVE
INT PalletAtivo
INT MosaicoAtivo

BOOL PegaOk=FALSE

CONST INT ALTURATOPO=850

;FOLD Definir Variaveis de Pontos
    E6POS XTopoPallet
;ENDFOLD

;FOLD STRUC Sinais
    Signal SensorAltura $in[1]
    Signal SensorCaixa $in[2]
    ;RecuaCilindro
    Signal AbreGarra1 $out[11]
    Signal AbreGarra2 $out[12]
    Signal AbreGarra3 $out[13]
    Signal AbreGarra4 $out[14]
    Signal AbreGarra5 $out[15]
    Signal AbreGarra6 $out[16]
    ;AvancaCilindro
    Signal FechaGarra1 $out[21]
    Signal FechaGarra2 $out[22]
    Signal FechaGarra3 $out[23]
    Signal FechaGarra4 $out[24]
    Signal FechaGarra5 $out[25]
    Signal FechaGarra6 $out[26]
    ;CilindroRecuado
    Signal SensorGarraAberta1 $in[31]
    Signal SensorGarraAberta2 $in[32]
    Signal SensorGarraAberta3 $in[33]
    Signal SensorGarraAberta4 $in[34]
    Signal SensorGarraAberta5 $in[35]
    Signal SensorGarraAberta6 $in[36]
    ;CilindroAvancado
    Signal SensorGarraFechada1 $in[41]
    Signal SensorGarraFechada2 $in[42]
    Signal SensorGarraFechada3 $in[43]
    Signal SensorGarraFechada4 $in[44]
    Signal SensorGarraFechada5 $in[45]
    Signal SensorGarraFechada6 $in[46]
;ENDFOLD

;FOLD STRUC MatrizPontos
    ;CLP
    ;-> {IndexacaoVH} TRUE-> Vertical / FALSE -> Horizontal
    ;-> {NumCaixas} numero de caixas para o pick
    ;Configuracao de Pick
    ;-> {ConfGarraPick} Opcao de abertura da garra (1,2,3,4,5...)
    ;-> {PickOp} Opcao de pick na esteira (1,2,3,4,5...)
    ;-> {FechaGarraOp} Opcao de abertura da garra (1,2,3,4,5...)
    ;Configuracao de Place
    ;-> {AbreGarraOp} Opcao de abertura da garra (1,2,3,4,5...)
    ;-> {SkipGoHome} Quando TRUE indica que deve fazer outro place antes de ir para a posicao de pick
    ;-> {SkipSobeRelativo} Quando TRUE indica que nao deve subir relativo para cima depois do place
    ;Pontos de Place
    ;-> {XApp1Place} Primeiro ponto de aproximacao de place
    ;-> {XApp2Place} Segundo ponto de aproximacao de place
    ;-> {XPlace} Ponto de place
    
    BOOL IndexacaoVH
    BOOL SkipGoHome
    BOOL SkipSobeRelativo
    INT NumCaixas
    INT ConfGarraPick
    INT PickOp
    INT FechaGarraOp
    INT AbreGarraOp
    E6POS XApp1Place
    E6POS XApp2Place
    E6POS XPlace
    STRUC Matriz BOOL IndexacaoVH,SkipGoHome,SkipSobeRelativo,INT NumCaixas,ConfGarraPick,PickOp,FechaGarraOp,AbreGarraOp,E6POS XApp1Place,XApp2Place,XPlace
    ;----------MatrizPontos[MOZAICOS,PONTOS]----------
    CONST INT NumMatrizI=8
    CONST INT NumMatrizJ=15  
    DECL GLOBAL Matriz MatrizPontos[8,15];
;ENDFOLD

;FOLD STRUC Receita
    INT Caixas
    INT PlacesCamada
    INT Camadas
    INT AlturaCaixa
    POS OffsetProduto
    E6POS Pick1Esteira1
    E6POS Pick1Esteira2
    E6POS Pick2Esteira1
    E6POS Pick2Esteira2
    STRUC Receita INT Caixas, PlacesCamada, Camadas, AlturaCaixa, POS OffsetProduto, E6POS Pick1Esteira1, Pick1Esteira2, Pick2Esteira1, Pick2Esteira2
    ;----------Receita[RECEITAS,MaxCamadas]----------
    CONST INT NumReceitas=8
    CONST INT MaxCamadas=11
    DECL GLOBAL Receita ReceitaFurukawa[8];[NUMRECEITAS]
    INT  MozaicoCamada[8,11];[NUMRECEITAS,MaxCamadas]
;ENDFOLD

;FOLD STRUC Pallet
    BOOL Livre
    INT ReceitaAtivo
    INT AtualCaixas
    INT PlaceAtivo
    INT CamadaAtiva
    FRAME BasePoint
    POS OffSetPallet
    E6POS Approch
    STRUC Pallet INT ReceitaAtivo, BOOL Livre, INT AtualCaixas, PlaceAtivo, CamadaAtiva, FRAME BasePoint, POS OffSetPallet, E6POS Approch
    CONST INT NumPallets=5
    DECL GLOBAL Pallet PalletFurukawa[5]
;ENDFOLD

;FOLD STRUC CLP
    ;1 - Pallet menor
    ;2 - Pallet maior
    ;3 - Sem pallet
    ;Mosaico
    ;Produto selecionado
    INT EsteiraAtiva
    STRUC CLP CHAR Produto[15], INT TamPallet, Mosaico
    DECL GLOBAL CLP CLPFurukawa
;ENDFOLD


;ENDFOLD